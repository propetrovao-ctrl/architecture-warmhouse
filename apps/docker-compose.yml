services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      - POSTGRES_DB=smarthome
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smarthome"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smarthome-network

  temperature-api:
    build:
      context: ../temperature-api
      dockerfile: Dockerfile
    container_name: temperature-api
    ports:
      - "8081:8081"
    restart: unless-stopped
    networks:
      - smarthome-network

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.init
    container_name: smarthome-db-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/smarthome
    networks:
      - smarthome-network

  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
      temperature-api:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/smarthome
      - TEMPERATURE_API_URL=http://temperature-api:8081
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:

networks:
  smarthome-network:
    driver: bridge